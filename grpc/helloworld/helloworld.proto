syntax = "proto3";

// How many language options might be useful?
option java_multiple_files = true;
option java_package = "org.opencoredata.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

package helloworld;

// needed to support REST gateway
// import "/Users/dfils/src/go/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api/annotations.proto";
// import "google/api/annotations.proto";   

// The service definition.
service Greeter {
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
  rpc YAMLToSchema (YAMLFacilityMeta) returns (SchemaorgFacilityMeta) {}
  // The following exposed a REST version of the RPC call
  // rpc YAMLToSchema (YAMLFacilityMeta) returns (SchemaorgFacilityMeta) {
  //   option (google.api.http) = {
  //     post: "/v1/example/echo"
  //     body: "*"
  //   };
  // }
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message YAMLFacilityMeta {
  string yaml = 1;
}

message SchemaorgFacilityMeta {
  string schemaorg = 1;
}
